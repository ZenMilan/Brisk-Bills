Here's the current Models plan:			
	* Also - add a test to invoice_payments/invoices? to ensure that we can't assign payments to an unpublished invoice manually.
		* test both invoices/payments!
		
	* Assign version numbers to the invoice based on the number of times an invoice is published...
		* I don't know if we should/need-to adjust the invoice pdfs out here just yet ....
		* Might as well put this in migration 29 while we're publishing anyways

* Get the controllers working 'the old way' by ...
	* manually specifying otherwise-autmatic activity associations in the invoices controller
	* Specifying invoice_payments in the controller (just using the recommended ones
	* algorithmically etermining the invoice activity_types...
	* start using 0.7 pre on mario	

Now for the Controller Adjustments:
  	* Invoice_id should be settable on the labor/materials/proposals/etc controllers. (though not the activities controller..not yet at least)
  	* Invoice create/update Activity assignments will likely need to be adjusted...
  		* Be sure to adjust any invoice_create tasks as well...
  	
  	* Keep in mind - we may need/want to update InvoicePayments and not just delete/create them (say an allocaed amount changes from $4.00 -> $3.00 on the same invoice/payment
  	* let's start by adding a detail that shows what payments are currently allocated..
  	* We don't need to get sart about allocating, unless there's 0 allocated payments whcih are currently assigned...
  	* Show a warning if someone tries to commit a payment w/o allocating the full amount...
  	* Don't forget to Add the right show-action fields too (in the payments controller)
  	* There's should be a way in the invoices to show which payments were applied to the invoice... (perhaps on the edit detail - just a listing?)
  		* Maybe this should be editable.... perhaps only if is_published?
  	* THen we can add an edit...
  	* Remove that restriction on unpublishing old invoices...
  	* And then we need to add a complemntary field in the invoices view? Nah - but show which payments are currently assigned as a read-only...

* Start using 0.7-pre on mario...

* BUG: Adjusting the Slimtimer Credentials for employees doesn't work (try changing the pass/email - FAIL!)

* (negative numbers) on invoices_with_cost are showing negative sign ...

* We should add an unpublished Open Invoices controller ...

* I'd like to see a payment identifier listed in the payments list ... (check no/cc#)

* Payment:::is_allocated should probably be added to a view and then list controller...
	* Code is there - but no view supports it...

* Add Existing Client Representatives should show them in alaphabetical order

* We should put tax before cost in the activities with prices controller...

* WHen Assigning employees to labr_rates - the form stays open between updates and shouldnt...

* Move_to_invoice function should allow us to Move_to '(Unassigned)', and ideally that would be a radio group

* Publish 0.7 !!!!!
---------------

* What happens with negative baance invoices? 
	* Payments can't be negative - so do they show up as paid? 
	* THere's no negative payments right?

* Probably - when prompted to delete an invoice, we should give the option to also remove the activities (or preserve them and leave them unsassigned)

* Translate the time into the local zone for the user, probably each user/client should have a zone associtation in their account.
	*  Its already stored in UTC everywhere...
	* We need to factor this into invoices too, I think

* Public interface

* Showing the Client eventlogs as an unedutable nested list  might be nice... Hell, employee eventlogs too....

* Publish 0.8 !!!!!
---------------
* CC payments handling built-in- not a plugin

* Revise the site-settings interfaces...

* Plugin interface...

* Publish 0.9 !!!!!
---------------
---------------
LONGER-TERM Features: (Needs re-prioritization...)

* We should audit for proper transaction support, and test!

* All of our read_attribute stuff, isn't "Caching"the newest values. (I think - write a test for this ...)
	* Use a find_invoice_with_totals
		* then update an invoice
		* then run an invoice.amunt(true)
		* tune run an invice.amount .... This this treturn the prior amount value?
	* THis has to be fixed/ested for all read attributes...

* I'd like some tests cases written for the view objects, make sure they work just like the non-views... ...
	* Boy this is getting hard, I think it has something to do wioth the transactions... Oddly, the tests work on their own, outside of the rake test	

* Better searches by using the search sql fields...

* See what we decide to do long-term with our model_view hack, maybe we can run tests on both models, as well as their view_models. Just one by one... I think thats smart...

Feature: Make the Search actually work the way we'd expect. Perhaps even make something mroe useful still that would let us filter records...

BUG: We should probably write a plugin that better displays delete errors in the flash[:error] , invoices is a good place for that
	* BTW - why does it show delete as an option here when we clearly can't delete some of these
	* Also- it'd be nice to show a pretty record error in the invoices update, if you try to update the activities on a published invoice
	* Create two invoices - both unpublished, try to delete the oldest one

* Use polymorphic relationship for sub activities
	* I really don't like the way we're uing dont_validate_type_associations. ..

* all delete confirms should go through the modal box - make this a plugin

* The ability to create an activity from the activities & invoices/activities list would be sweet
	* With a little pop-up that asks for the activity type?

* Emailer: 
	* <p>Please note that your current account balance, including this invoice, is: $XXX.XXX . Invoices 1,2, & 3 are outstanding. <red>Invoices 1 & 2 are past their 30 day </red> </p>
	* And change the if line to only send when there's been a change in the invoice status (See the invoice TODO...)
	* This gets a little complicated though - we have to decide if we're going to generate these warnings based on the date of the invoice, or the current situation
	
* The invoice issued_on date I think is rounding off to the end of the day on assignment. It should really be time sensitive.
	
* Better unit tests for Activity::* model. (too , make sure negative values work on whatever..)

Plugins for 
   * Reimbursable scanning
	* phone calls
		* The :phone_extension field, *might* be something we put into the asterisk plugin 

* An employee_rate_changed_last changed plugin would be super-useful at some point...

Nice Features:
	* Todo list.. maybe just a block? Call it an outstanding issues/projects
	* Client Notes? Probably just a google docs link
-------------------
dd if=/dev/urandom bs=200 count=1 | tr -cd 'A-Za-z0-9!@#$%^&*()_+'; echo

CREATE DATABASE `briskbills_development`;
GRANT ALL PRIVILEGES ON briskbills_development.* TO briskbills@localhost IDENTIFIED BY 'cut1ckle';

CREATE DATABASE `cusis_test`;
GRANT ALL PRIVILEGES ON cusis_test.* TO cusis@localhost IDENTIFIED BY 'cut1ckle';
-------------------
required gems:
 * extensions
 * pdf-writer
 * slimtimer4r
 * money

